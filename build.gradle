plugins {
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.9.25"
    id "org.jetbrains.kotlin.plugin.spring" version "1.9.25"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.9.25"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.9.25"
    id "io.spring.dependency-management" version "1.1.6"
    id "org.springframework.boot" version "3.3.6" apply false
    id "org.springframework.cloud.contract" version "4.1.4" apply false
    id "org.asciidoctor.jvm.convert" version "3.3.2" apply false
    id "org.jlleitschuh.gradle.ktlint" version "12.1.1" apply false
    id "io.mateo.cxf-codegen" version "1.2.0" apply false
    id "com.google.protobuf" version "0.9.4" apply false
}

ext {
    // Common
    springBootVersion = "3.3.6"
    springContractVersion = "4.1.4"
    springShellVersion = "3.3.3"
    kotlinVersion = "1.9.25"
    jetbrainsAnnotationsVersion = "22.0.0"

    // RESTful
    openApiVersion = "2.1.0"
    logbookVersion = "3.10.0"
    resilience4jVersion = "2.3.0"
    springCloudContractVersion = "4.0.2"

    // SOAP
    cxfVersion = "4.0.0"
    jakartaVersion = "4.0.2"

    // gRPC
    grpcVersion = "1.68.1"
    protobufVersion = "4.28.3"
    grpcSpringVersion = "3.1.0.RELEASE"
    javaxAnnotationVersion = "1.3.2"

    // Test
    postgresContainerVersion = "1.20.4"
}

allprojects { ->
    apply plugin: "idea"
    apply plugin: "kotlin"
    apply plugin: "org.jlleitschuh.gradle.ktlint"
    apply plugin: "io.spring.dependency-management"

    [compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "17"

    repositories {
        mavenCentral()
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
            mavenBom "org.springframework.shell:spring-shell-dependencies:$springShellVersion"
            mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:$springCloudContractVersion"
        }
    }

    dependencies {
        implementation "org.apache.commons:commons-lang3"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    }

    ktlint {
        version.set("1.2.1")
        filter {
            exclude { entry -> entry.file.toString().contains("generated") }
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            showStandardStreams = true
        }
    }

    tasks.withType(Jar).configureEach {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}
