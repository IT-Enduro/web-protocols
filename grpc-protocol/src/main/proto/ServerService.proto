syntax = "proto3";

package ru.romanow.protocols.grpc;

option java_outer_classname = "ServerServiceModels";
option java_package = "ru.romanow.protocols.grpc";

service ServerService {
  rpc getById(ID) returns (ServerResponse) {};
  rpc findAll(Empty) returns (ServersResponse) {};
  rpc findInCity(City) returns (ServersResponse) {};
  rpc create(CreateServerRequest) returns (ServerResponse) {};
  rpc update(CreateServerRequest) returns (ServerResponse) {};
  rpc delete(ID) returns (Empty) {};
}

message ID {
  int32 id = 1;
}

message City {
  string city = 1;
}

message Empty {}

message CreateServerRequest {
  optional int32 id = 1;
  optional Purpose purpose = 2;
  optional int32 latency = 3;
  optional int32 bandwidth = 4;
  optional StateInfo state = 5;
}

message ServerResponse {
  int32 id = 1;
  Purpose purpose = 2;
  int32 latency = 3;
  int32 bandwidth = 4;
  StateInfo state = 5;
}

message ServersResponse {
  repeated ServerResponse server = 1;
}

message StateInfo {
  optional string city = 1;
  optional string country = 2;
}

enum Purpose {
  FRONTEND = 0;
  BACKEND = 1;
  DATABASE = 2;
}
