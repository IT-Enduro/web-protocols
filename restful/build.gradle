plugins {
    id "idea"
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.plugin.spring"
    id "org.jetbrains.kotlin.plugin.jpa"
    id "org.springframework.boot"
    id "org.asciidoctor.jvm.convert"
}

ext {
    snippetsDir = file("build/generated-snippets")
    htmlOutputDir = file("build/generated-html")
}

configurations {
    asciidoctorExt
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:$springCloudContractVersion"
    }
}

asciidoctor {
    inputs.dir snippetsDir
    sourceDir "src/main/asciidoc"
    outputDir htmlOutputDir

    attributes "snippets": snippetsDir
    dependsOn test
}

dependencies {
    implementation project(":api")
    implementation project(":common")

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    implementation "org.springdoc:springdoc-openapi-starter-common:$openApiVersion"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openApiVersion"

    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock"
    testImplementation "org.testcontainers:postgresql:$postgresContainerVersion"
    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor"
}

bootJar {
    archiveFileName = "${project.name}.jar"

    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into "static/docs"
    }
}